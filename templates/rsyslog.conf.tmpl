{{- define "remote_target" }}
  action(type="omrelp"
         name="fwd_to_logserver"
         target="{{getenv "TARGET"}}"
         template="{{ . }}"
         port="5515"
         queue.type="LinkedList"
         queue.filename="fwd_queue"
         action.resumeretrycount="-1"
         queue.dequeuebatchsize="100"
         queue.saveonshutdown="on"
         queue.discardseverity="8"
         queue.timeoutenqueue="0"
         queue.maxdiskspace="1g"
         queue.highwatermark="8000"
         queue.lowwatermark="2000"
         queue.size="10000"
         queue.discardmark="9750"
         tls="on"
  )
{{ end }}

module(load="impstats" log.syslog="on" ruleset="pstats" format="json" resetCounters="on" interval="10")
module(load="imudp")
module(load="imtcp")
module(load="imrelp")
module(load="omrelp")
module(load="mmjsonparse")

input(type="imudp" port="514" ruleset="syslog")
input(type="imtcp" port="514" ruleset="syslog")
input(type="imudp" port="1514" ruleset="syslog")
input(type="imtcp" port="1514" ruleset="syslog")
input(type="imrelp" port="2514" tls="off" ruleset="agent")
input(type="imrelp" port="2515" tls="on" ruleset="agent")

$PrivDropToUser syslog
$PrivDropToGroup syslog

$MaxMessageSize 32k
$WorkDirectory /var/spool/rsyslog
$ActionFileDefaultTemplate RSYSLOG_TraditionalFileFormat


# File path templates
template(name="SyslogDynFile" type="string" string="/var/log/%$now%/syslog/%hostname%/%programname%.%syslogfacility-text%.%syslogseverity-text%.log")
template(name="PstatsDynFile" type="string" string="/var/log/%$now%/pstats/pstats.log")
template(name="InternalDynFile" type="string" string="/var/log/%$now%/internal/%programname%.%syslogfacility-text%.%syslogseverity-text%.log")
template(name="JournaldDynFile" type="string" string="/var/log/%$now%/journald/%hostname%/%programname%.%syslogfacility-text%.%syslogseverity-text%.log")
template(name="ContainersDynFile" type="string" string="/var/log/%$now%/containers/%.containername%-%.containerid%.log")

# Log lines templates
template(name="PlainForwardFormatWithToken" type="string" string="<%PRI%>%TIMESTAMP:::date-rfc3339% %HOSTNAME% %syslogtag:1:64% TOKEN@{{getenv "TOKEN"}} %msg:::sp-if-no-1st-sp%%msg%")
template(name="JSONForwardFormatWithToken" type="string" string="<%PRI%>%TIMESTAMP:::date-rfc3339% %HOSTNAME% %syslogtag:1:64% TOKEN@{{getenv "TOKEN"}} %$!all-json%\n")
#template(name="CEETemplate" type="string" string="%TIMESTAMP% %HOSTNAME% %syslogtag% %$!all-json%\n")
template(name="SimpleJournald" type="string" string="%TIMESTAMP:::date-rfc3339%: %$.msg%\n")
template(name="SimpleContainer" type="string" string="%TIMESTAMP:::date-rfc3339%: %$.msg% %$.containertag%\n")
#template(name="PureJSON" type="string" string="%$!all-json%\n")

# StatsD protocol templates
template(name="StatsDContainer" type="string" string="syslog.containers.%$.containername%:1|c\n")
template(name="StatsDImUDP" type="string" string="syslog.input.udp:%$!submitted%|c\n")
template(name="StatsDImTCP" type="string" string="syslog.input.tcp:%$!submitted%|c\n")
template(name="StatsDImRELP" type="string" string="syslog.input.relp:%$!submitted%|c\n")
template(name="StatsDQueue" type="list") {
         constant(value="syslog.queue.")
         property(name="$!name")
         constant(value=".size:")
             property(name="$!size")
             constant(value="|g\n")
         constant(value="syslog.queue.")
         property(name="$!name")
         constant(value=".enqueued:")
             property(name="$!enqueued")
             constant(value="|c\n")
         constant(value="syslog.queue.")
         property(name="$!name")
         constant(value=".discarded_full:")
             property(name="$!discarded.full")
             constant(value="|c\n")
         constant(value="syslog.queue.")
         property(name="$!name")
         constant(value=".discarded_nf:")
             property(name="$!discarded.nf")
             constant(value="|c\n")
         constant(value="syslog.queue.")
         property(name="$!name")
         constant(value=".maxqsize:")
             property(name="$!maxqsize")
             constant(value="|g\n")
        }

ruleset(
  name="from_agents"
  queue.type="LinkedList"
) {
  action(type="mmjsonparse" name="parse_json_from_agents")
  set $.containername = $!CONTAINER_NAME;
  set $.containerid = $!CONTAINER_ID;
  set $.containertag = $!CONTAINER_TAG;
  set $.msg = $!MESSAGE;

{{- if ne "" (getenv "EXTRA") -}}
{{ $data := json (getenv "EXTRA") -}}
  {{ range $k, $v := $data }}
  set $!{{$k}} = "{{$v}}";
  {{- end -}}
{{ end }}

  if ($.containername != "") then {
    call containers
  } else {
    call journald
  }
}

ruleset(
  name="from_syslog"
  queue.type="LinkedList"
) {
  action(type="omfile"
         name="syslog_dyn_file"
         dynaFile="SyslogDynFile"
         dirCreateMode="0755"
         FileCreateMode="0644"
  )
{{ if ne "" (getenv "TARGET") -}}
{{ template "remote_target" "PlainForwardFormatWithToken" }}
{{ end -}}
}

ruleset(
  name="from_internal"
  queue.type="LinkedList"
) {
  action(type="omfile"
         name="internal_dyn_file"
         dynaFile="InternalDynFile"
         dirCreateMode="0755"
         FileCreateMode="0644"
  )
}

ruleset(
  name="from_pstats"
  queue.type="LinkedList"
) {
  action(type="omfile"
         name="pstats_dyn_file"
         dynaFile="PstatsDynFile"
         dirCreateMode="0755"
         FileCreateMode="0644"
  )

  action(type="mmjsonparse" name="parse_json_from_pstats")

  if ($!origin == "core.queue") then {
    action(type="omfwd"
           name="fwd_queue_stats"
           target="10.42.24.101"
           protocol="udp"
           port="8125"
           template="StatsDQueue"
    )
  } else if ($!origin == "imudp") then {
    action(type="omfwd"
           name="fwd_imudp_stats"
           target="10.42.24.101"
           protocol="udp"
           port="8125"
           template="StatsDImUDP"
    )
  } else if ($!origin == "imtcp") then {
    action(type="omfwd"
           name="fwd_imtcp_stats"
           target="10.42.24.101"
           protocol="udp"
           port="8125"
           template="StatsDImTCP"
    )
  } else if ($!origin == "imrelp") then {
    action(type="omfwd"
           name="fwd_imrelp_stats"
           target="10.42.24.101"
           protocol="udp"
           port="8125"
           template="StatsDImRELP"
    )
  }
}

ruleset(
  name="from_agents_journald"
  queue.type="LinkedList"
) {
  action(type="omfile"
         name="journald_dyn_file"
         dynaFile="JournaldDynFile"
         template="SimpleJournald"
         dirCreateMode="0755"
         FileCreateMode="0644"
  )
{{ if ne "" (getenv "TARGET") -}}
{{ template "remote_target" "JSONForwardFormatWithToken" }}
{{ end -}}
}

ruleset(
  name="from_agents_containers"
  queue.type="LinkedList"
) {
  action(type="omfile"
         name="containers_dyn_file"
         dynaFile="ContainersDynFile"
         #template="RSYSLOG_DebugFormat"
         template="SimpleContainer"
         dirCreateMode="0755"
         FileCreateMode="0644"
  )

  action(type="omfwd"
         name="fwd_containers_stats"
         target="10.42.24.101"
         protocol="udp"
         port="8125"
         template="StatsDContainer"
  )

{{ if ne "" (getenv "TARGET") -}}
{{ template "remote_target" "JSONForwardFormatWithToken" }}
{{ end -}}
}

if ($inputname == "rsyslogd") then {
  call internal
}

